name: drift-detection
on:
  schedule:
    - cron: "0 2 * * 1" # Lunes a las 2 AM UTC
  workflow_dispatch: # Manual trigger

jobs:
  drift-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.10.6
          tofu_arch: amd64

      - name: Cache OpenTofu
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugins
            ~/.opentofu.d/plugins
          key: ${{ runner.os }}-opentofu-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-opentofu-

      - name: Cargar secrets
        run: |
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "TF_VAR_environment=dev" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: envs/dev
        run: |
          tofu init -input=false

      - name: Check for Drift
        working-directory: envs/dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
        run: |
          tofu plan -detailed-exitcode -no-color > drift-check.txt
          exit_code=$?

          if [ $exit_code -eq 2 ]; then
            echo "DRIFT_DETECTED=true" >> $GITHUB_ENV
            echo "❌ Infrastructure drift detected!"
            cat drift-check.txt
          elif [ $exit_code -eq 0 ]; then
            echo "DRIFT_DETECTED=false" >> $GITHUB_ENV
            echo "✅ No infrastructure drift detected"
          else
            echo "DRIFT_DETECTED=error" >> $GITHUB_ENV
            echo "❌ Error checking for drift"
            cat drift-check.txt
            exit 1
          fi

      - name: Create Drift Report
        if: env.DRIFT_DETECTED == 'true'
        run: |
          echo "## 🚨 Infrastructure Drift Detected" > drift-report.md
          echo "" >> drift-report.md
          echo "**Date:** $(date)" >> drift-report.md
          echo "**Environment:** dev" >> drift-report.md
          echo "" >> drift-report.md
          echo "### Changes detected:" >> drift-report.md
          echo '```' >> drift-report.md
          cat drift-check.txt >> drift-report.md
          echo '```' >> drift-report.md

      - name: Create Issue for Drift
        if: env.DRIFT_DETECTED == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const driftReport = fs.readFileSync('drift-report.md', 'utf8');

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Infrastructure Drift Detected - Dev Environment',
              body: driftReport,
              labels: ['drift', 'infrastructure', 'dev', 'urgent']
            });

      - name: Upload Drift Report
        if: env.DRIFT_DETECTED == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: drift-report
          path: |
            drift-check.txt
            drift-report.md
          retention-days: 30
