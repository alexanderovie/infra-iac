# yamllint disable rule:quoted-strings rule:indentation rule:brackets rule:empty-values rule:line-length
name: 'Terraform Plan'

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'envs/**'
      - 'providers/**'
      - 'bootstrap/**'
      - '.github/workflows/terraform-plan.yml'
      - 'Makefile'
      - '.pre-commit-config.yaml'
  workflow_dispatch:

env:
  TF_VERSION: '1.10.0'
  TFLINT_VERSION: '0.50.3'
  TFSEC_VERSION: '1.28.1'
  INFRACOST_VERSION: '0.10.0'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, stage, prod]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: ${{ env.TFLINT_VERSION }}

    - name: Setup TFSec
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        tfsec_version: ${{ env.TFSEC_VERSION }}

    - name: Setup Infracost
      uses: infracost/infracost@v0.10.0
      with:
        api_key: ${{ secrets.INFRACOST_API_KEY }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check -recursive
      working-directory: envs/${{ matrix.environment }}

    - name: TFLint
      id: tflint
      run: tflint --init && tflint --config ../../tools/.tflint.hcl
      working-directory: envs/${{ matrix.environment }}

    - name: TFSec Security Scan
      id: tfsec
      run: tfsec --config-file ../../tools/tfsec-excludes.yml
      working-directory: envs/${{ matrix.environment }}

    - name: Terraform Init
      id: init
      run: terraform init -backend-config=backend.hcl
      working-directory: envs/${{ matrix.environment }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: envs/${{ matrix.environment }}

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out=tfplan
      working-directory: envs/${{ matrix.environment }}

    - name: Cost Estimation
      id: cost
      run: |
        infracost breakdown --path=envs/${{ matrix.environment }} --format=json --out-file=infracost.json
        infracost breakdown --path=envs/${{ matrix.environment }} --format=table
      continue-on-error: true

    - name: Save Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ matrix.environment }}
        path: |
          envs/${{ matrix.environment }}/tfplan
          envs/${{ matrix.environment }}/infracost.json
        retention-days: 5

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v8
      with:
        script: |
          const output = `#### Terraform Plan - ${{ matrix.environment }} Environment

          **Terraform Format and Style** \`${{ steps.fmt.outcome }}\`
          **TFLint** \`${{ steps.tflint.outcome }}\`
          **TFSec Security Scan** \`${{ steps.tfsec.outcome }}\`
          **Terraform Init** \`${{ steps.init.outcome }}\`
          **Terraform Validate** \`${{ steps.validate.outcome }}\`
          **Terraform Plan** \`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
